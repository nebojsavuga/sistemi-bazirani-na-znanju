package cep;

import com.ftn.sbnz.model.users.Injury;
import com.ftn.sbnz.model.Filters;
import com.ftn.sbnz.model.RecommendedArticleDTO;
import com.ftn.sbnz.model.articles.Article;
import com.ftn.sbnz.model.articles.GrassFootbalShoe;
import com.ftn.sbnz.model.sport.Sport;
import com.ftn.sbnz.model.sport.SportLevel;
import com.ftn.sbnz.model.sport.SportTenisField;
import com.ftn.sbnz.model.articles.Ball;
import com.ftn.sbnz.model.articles.BallType;
import com.ftn.sbnz.model.articles.GearTypeFootball;
import com.ftn.sbnz.model.articles.FootballGear;
import com.ftn.sbnz.model.articles.FootbalShoeNoCrampons;
import com.ftn.sbnz.model.sport.SportFootballType;
import com.ftn.sbnz.model.events.Purchase;
import com.ftn.sbnz.model.articles.Rating;
import com.ftn.sbnz.model.articles.Barbel;
import com.ftn.sbnz.model.articles.BarbelType;
import com.ftn.sbnz.model.articles.Weight;
import com.ftn.sbnz.model.articles.WlTypeOfGear;
import com.ftn.sbnz.model.articles.WeightliftingGear;
import com.ftn.sbnz.model.sport.SportWeightliftingType;

import java.util.Set;
import java.util.List;

global Set<RecommendedArticleDTO> recommendations;

rule "Ukoliko je kupljen neki artikal u poslednjih mesec dana, ne preporucivati ga"
salience 1000
when
    $article: RecommendedArticleDTO($id: id) from recommendations
    $purchase : Purchase(article.getId() == $id) over window:time(30d)
then
    System.out.println($article);
    recommendations.remove($article);
end

rule "Ukoliko je brend ocenjen ispod 3 5 ili vise puta u poslednjih godinu dana ne preporucuj ga"
salience 1000
when
    $article: RecommendedArticleDTO($brand: brandName) from recommendations
    Number(intValue >= 5) from accumulate(
    $rating:Rating(article.getBrandName() == $brand, rating <= 3)
    over window: time(365d),
    count($rating)
)
then
    System.out.println($article);
    recommendations.remove($article);
end

rule "Ukoliko je kupio preko 4 ploce od 20kg nudimo olimpijsku sipku"
salience 1
when
    $article: Article()
    $proSipka: Barbel(type == BarbelType.Olimpijska) from $article
    $tezina: Weight($idWeight:id, weight > 19.9)
    Number(intValue >= 4) from accumulate(
    $purchase : Purchase(article.getId() == $idWeight)
    over window: time(365d),
    count($purchase)
)
then
    RecommendedArticleDTO recommendedArticle = new RecommendedArticleDTO();
    recommendedArticle.setName($article.getName());
    recommendedArticle.setPrice($article.getPrice());
    recommendedArticle.setId($article.getId());
    recommendedArticle.setBrandName($article.getBrandName());
    recommendedArticle.setArticleType("Olympic barbel");
    recommendations.add(recommendedArticle);
    insert(recommendedArticle);
    
end

rule "Ukoliko je kupio preko 4 ploce od 20kg i olimpijsku sipku i powerlifter je, nudimo mu kais za dizanje tegova"
salience 1
when
    $filters: Filters(sport == Sport.DizanjeTegova, typeOfWeightlifting == SportWeightliftingType.Powerlifting)
    $article: Article()
    $kais: WeightliftingGear(type == WlTypeOfGear.Belt) from $article
    Barbel($idSipka:id, type == BarbelType.Olimpijska)
    Purchase(article.getId() == $idSipka)
    $tezina: Weight($idWeight:id, weight > 19.9)
    Number(intValue >= 4) from accumulate(
    $purchase : Purchase(article.getId() == $idWeight)
    over window: time(365d),
    count($purchase)
)
then
    RecommendedArticleDTO recommendedArticle = new RecommendedArticleDTO();
    recommendedArticle.setName($article.getName());
    recommendedArticle.setPrice($article.getPrice());
    recommendedArticle.setId($article.getId());
    recommendedArticle.setBrandName($article.getBrandName());
    recommendedArticle.setArticleType("Belt");
    recommendations.add(recommendedArticle);
    insert(recommendedArticle);
    
end

rule "Ukoliko je kupio preko 4 ploce od 20kg i olimpijsku sipku i powerlifter je, nudimo mu steznike za kolena"
salience 1
when
    $filters: Filters(sport == Sport.DizanjeTegova, typeOfWeightlifting == SportWeightliftingType.Powerlifting)
    $article: Article()
    $kais: WeightliftingGear(type == WlTypeOfGear.KneeWrap) from $article
    Barbel($idSipka:id, type == BarbelType.Olimpijska)
    Purchase(article.getId() == $idSipka)
    $tezina: Weight($idWeight:id, weight > 19.9)
    Number(intValue >= 4) from accumulate(
    $purchase : Purchase(article.getId() == $idWeight)
    over window: time(365d),
    count($purchase)
)
then
    RecommendedArticleDTO recommendedArticle = new RecommendedArticleDTO();
    recommendedArticle.setName($article.getName());
    recommendedArticle.setPrice($article.getPrice());
    recommendedArticle.setId($article.getId());
    recommendedArticle.setBrandName($article.getBrandName());
    recommendedArticle.setArticleType("KneeWrap");
    recommendations.add(recommendedArticle);
    insert(recommendedArticle);
    
end