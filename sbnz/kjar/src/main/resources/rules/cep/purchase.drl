package cep;

import com.ftn.sbnz.model.events.Purchase;
import com.ftn.sbnz.model.articles.FootbalShoeCrampons;
import com.ftn.sbnz.model.articles.FootballGear;
import com.ftn.sbnz.model.articles.GearTypeFootball;
import com.ftn.sbnz.model.articles.Article;
import java.util.List;
import com.ftn.sbnz.model.Code;
global List<Purchase> purchases;
global List<Purchase> purchasesLoyal;
global List<Code> usedCodes;
global List<Code> usedLoyalCodes;
global Code code;
global Code codeLoyal;
global Code codePriceDiscount;
global Code codeLoyalPriceDiscount;

rule "If they have purchased more than 5 items for a specific sport in the last year, provide them with a discount code for that sport"
salience -100
when
    String(this == "cepKupovina")
    $purchase: Purchase($user:user, $article:article, isProcessedForSportCode() == false)
    Number(intValue >= 4) from accumulate(
    $p2:Purchase(this!= $purchase, user == $user, article.getSport() == $article.getSport(), isProcessedForSportCode() == false)
    over window: time(365d),
    count($p2)
)
then
    code.setSport($article.getSport());
    code.setDiscountPercentage(10.0f);
    code.setDiscountPrice(0.0f);
    code.setUsed(false);
    code.setUser($user);
    code.setFlag(0);
    code.setName("10% discount for sport: " + $article.getSport());
    purchases.add($purchase);
end

rule "If they have spent over 500€, give them a discount code for any article."
salience -100
when
    String(this == "cepKupovina")
    $purchase: Purchase($user:user, $article:article, isProcessedForFavoriteCode() == false)
    Number(floatValue >= 500) from accumulate(
    $p2:Purchase($price:price, user == $user, isProcessedForFavoriteCode() == false)
    over window: time(365d),
    sum($price)
)
then
    codeLoyal.setSport("");
    codeLoyal.setDiscountPercentage(10.0f);
    codeLoyal.setDiscountPrice(0.0f);
    codeLoyal.setUsed(false);
    codeLoyal.setUser($user);
    codeLoyal.setFlag(2);
    codeLoyal.setName("10% discount for any article");
    purchasesLoyal.add($purchase);
end

rule "If the user has used 4 codes for a specific sport in the last 2 years, give them a €10 discount code for an item in that sport"
salience -100
when
    String(this == "cepKupovina")
    $code: Code($user:user, $sport: sport,getFlag() == 0, isUsed() == true)
    Number(intValue >= 3) from accumulate(
    $code2:Code(this!= $code, user == $user,getFlag()==0, sport == $sport, isUsed() == true)
    over window: time(730d),
    count($code2)
)
then
    codePriceDiscount.setSport($sport);
    codePriceDiscount.setDiscountPercentage(0.0f);
    codePriceDiscount.setDiscountPrice(10.0f);
    codePriceDiscount.setUsed(false);
    codePriceDiscount.setUser($user);
    codePriceDiscount.setFlag(0);
    codePriceDiscount.setName("10e discount for sport: " + $sport);
    usedCodes.add($code);
end

rule "If the user has used 3 loyalty codes in the last 2 years, give them a €20 discount code for any item."
salience -100
when
    String(this == "cepKupovina")
    $code: Code($user:user, $sport: sport,getFlag()==2, isUsed() == true)
    Number(intValue >= 2) from accumulate(
    $code2:Code(this!= $code, user == $user,getFlag()==2, isUsed() == true)
    over window: time(730d),
    count($code2)
)
then
    codeLoyalPriceDiscount.setSport("");
    codeLoyalPriceDiscount.setDiscountPercentage(0.0f);
    codeLoyalPriceDiscount.setDiscountPrice(20.0f);
    codeLoyalPriceDiscount.setUsed(false);
    codeLoyalPriceDiscount.setUser($user);
    codeLoyalPriceDiscount.setFlag(2);
    codeLoyalPriceDiscount.setName("20e discount for any article");
    usedLoyalCodes.add($code);
end

rule "If shoes with 6 crampons are purchased, offer replacement crampons."
salience -50
when
    Filters(sport == Sport.Fudbal)
    $article: Article()
    $kopacka: FootbalShoeCrampons(numberOfCrampons == 6, $kopackaId: id) from $article
    Purchase(article.getId() == $kopackaId)
    $krampon: FootballGear(type == GearTypeFootball.Krampon)
then
    RecommendedArticleDTO recommendedArticle = new RecommendedArticleDTO();
    recommendedArticle.setName($krampon.getName());
    recommendedArticle.setPrice($krampon.getPrice());
    recommendedArticle.setId($krampon.getId());
    recommendedArticle.setBrandName($krampon.getBrandName());
    recommendedArticle.setArticleType("Crampons");
    recommendedArticle.setPathToImage($krampon.getPathToImage());
    recommendations.add(recommendedArticle);
    insert(recommendedArticle);
end

rule "If crampons are purchased, offer a key for removing and installing crampons"
salience -30
when
    Filters(sport == Sport.Fudbal)
    $article: Article()
    $kramponi: FootballGear(type == GearTypeFootball.Krampon, $kramponiId: id) from $article
    Purchase(article.getId() == $kramponiId)
    $kljuc: FootballGear(type == GearTypeFootball.KljucZaKrampone)
then
    RecommendedArticleDTO recommendedArticle = new RecommendedArticleDTO();
    recommendedArticle.setName($kljuc.getName());
    recommendedArticle.setPrice($kljuc.getPrice());
    recommendedArticle.setId($kljuc.getId());
    recommendedArticle.setBrandName($kljuc.getBrandName());
    recommendedArticle.setArticleType("Crampon key");
    recommendedArticle.setPathToImage($kljuc.getPathToImage());
    recommendations.add(recommendedArticle);
    insert(recommendedArticle);
end