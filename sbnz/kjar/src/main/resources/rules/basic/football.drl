package basic;
import com.ftn.sbnz.model.users.Injury;
import com.ftn.sbnz.model.Filters;
import com.ftn.sbnz.model.RecommendedArticleDTO;
import com.ftn.sbnz.model.articles.Article;
import com.ftn.sbnz.model.articles.GrassFootbalShoe;
import com.ftn.sbnz.model.sport.Sport;
import com.ftn.sbnz.model.sport.SportLevel;
import com.ftn.sbnz.model.sport.SportTenisField;
import com.ftn.sbnz.model.articles.Ball;
import com.ftn.sbnz.model.articles.BallType;
import com.ftn.sbnz.model.articles.GearTypeFootball;
import com.ftn.sbnz.model.articles.FootballGear;
import com.ftn.sbnz.model.articles.FootbalShoeNoCrampons;
import com.ftn.sbnz.model.articles.FootbalShoeCrampons;
import com.ftn.sbnz.model.sport.SportFootballType;
import com.ftn.sbnz.model.sport.SportLevel;
import com.ftn.sbnz.model.sport.SportFootballPlayer;

import java.util.Set;
import java.util.List;

global Set<RecommendedArticleDTO> recommendations;
global List<Injury> injuries;


rule "Preporuci mu fudbalske lopte"
salience 100
when
    $filters: Filters(sport == Sport.Fudbal, (age >= 12 || age == null || age == 0), level == null, typeOfFootball == null)
    $article: Article()
    $ball: Ball() from $article
then
    RecommendedArticleDTO recommendedArticle = new RecommendedArticleDTO();
    recommendedArticle.setName($article.getName());
    recommendedArticle.setPrice($article.getPrice());
    recommendedArticle.setId($article.getId());
    recommendedArticle.setBrandName($article.getBrandName());
    recommendedArticle.setArticleType("Ball");
    recommendedArticle.setPathToImage($article.getPathToImage());
    recommendations.add(recommendedArticle);
    insert(recommendedArticle);
end

rule "Preporuci mu fudbalske lopte za decu"
salience 100
when
    $filters: Filters(sport == Sport.Fudbal, age < 12)
    $article: Article()
    $ball: Ball(type == BallType.Decija) from $article
then
    RecommendedArticleDTO recommendedArticle = new RecommendedArticleDTO();
    recommendedArticle.setName($article.getName());
    recommendedArticle.setPrice($article.getPrice());
    recommendedArticle.setId($article.getId());
    recommendedArticle.setBrandName($article.getBrandName());
    recommendedArticle.setArticleType("Ball");
    recommendedArticle.setPathToImage($article.getPathToImage());
    recommendations.add(recommendedArticle);
    insert(recommendedArticle);
end

rule "Izabrana opcija mali fudbal, preporuci patike bez krampona"
salience 100
when
    $filters: Filters(sport == Sport.Fudbal, typeOfFootball == SportFootballType.Mali)
    $article: Article()
    $shoe: FootbalShoeNoCrampons() from $article
then
    RecommendedArticleDTO recommendedArticle = new RecommendedArticleDTO();
    recommendedArticle.setName($article.getName());
    recommendedArticle.setPrice($article.getPrice());
    recommendedArticle.setId($article.getId());
    recommendedArticle.setBrandName($article.getBrandName());
    recommendedArticle.setArticleType("Shoes");
    recommendedArticle.setPathToImage($article.getPathToImage());
    recommendations.add(recommendedArticle);
    insert(recommendedArticle);
end

rule "Mali fudbal, preko 12 godina, Preporuci mu fudbalkse lopte 4 sa tegom"
salience 100
when
    $filters: Filters(sport == Sport.Fudbal, age > 12, typeOfFootball == SportFootballType.Mali)
    $article: Article()
    $ball: Ball(type == BallType.CetiriSaTegom) from $article
then
    RecommendedArticleDTO recommendedArticle = new RecommendedArticleDTO();
    recommendedArticle.setName($article.getName());
    recommendedArticle.setPrice($article.getPrice());
    recommendedArticle.setId($article.getId());
    recommendedArticle.setBrandName($article.getBrandName());
    recommendedArticle.setArticleType("Ball");
    recommendedArticle.setPathToImage($article.getPathToImage());
    recommendations.add(recommendedArticle);
    insert(recommendedArticle);
end

rule "Rekreativan, preporuci amaterske lopte"
salience 100
when
    $filters: Filters(sport == Sport.Fudbal, (age >= 12 || age == null || age == 0), level == SportLevel.Rekreativac)
    $article: Article()
    $ball: Ball(type == BallType.Amaterska) from $article
then
    RecommendedArticleDTO recommendedArticle = new RecommendedArticleDTO();
    recommendedArticle.setName($article.getName());
    recommendedArticle.setPrice($article.getPrice());
    recommendedArticle.setId($article.getId());
    recommendedArticle.setBrandName($article.getBrandName());
    recommendedArticle.setArticleType("Ball");
    recommendedArticle.setPathToImage($article.getPathToImage());
    recommendations.add(recommendedArticle);
    insert(recommendedArticle);
end

rule "Amater, preporuci amaterske i trening lopte"
salience 100
when
    $filters: Filters(sport == Sport.Fudbal, (age >= 12 || age == null || age == 0), level == SportLevel.Amater)
    $article: Article()
    $ball: Ball(type == BallType.Amaterska || type == BallType.Trening) from $article
then
    RecommendedArticleDTO recommendedArticle = new RecommendedArticleDTO();
    recommendedArticle.setName($article.getName());
    recommendedArticle.setPrice($article.getPrice());
    recommendedArticle.setId($article.getId());
    recommendedArticle.setBrandName($article.getBrandName());
    recommendedArticle.setArticleType("Ball");
    recommendedArticle.setPathToImage($article.getPathToImage());
    recommendations.add(recommendedArticle);
    insert(recommendedArticle);
end

rule "Profesionalac, preporuci amaterske i trening lopte"
salience 100
when
    $filters: Filters(sport == Sport.Fudbal, (age >= 12 || age == null), level == SportLevel.Pro)
    $article: Article()
    $ball: Ball(type == BallType.Profesionalna || type == BallType.Trening) from $article
then
    RecommendedArticleDTO recommendedArticle = new RecommendedArticleDTO();
    recommendedArticle.setName($article.getName());
    recommendedArticle.setPrice($article.getPrice());
    recommendedArticle.setId($article.getId());
    recommendedArticle.setBrandName($article.getBrandName());
    recommendedArticle.setArticleType("Ball");
    recommendedArticle.setPathToImage($article.getPathToImage());
    recommendations.add(recommendedArticle);
    insert(recommendedArticle);
end

rule "Povreda skocnog zgloba, ponudi kostobran sa stitnikom za skocni zglob"
salience 100
when
    $filters: Filters(sport == Sport.Fudbal, $selectedInjuries: injuries)
    Injury(name == "Povreda skocnog zgloba", $injuryId: id) from injuries
    eval($selectedInjuries.contains($injuryId))
    $article: Article()
    $shinProtector: FootballGear(type == GearTypeFootball.KostobranSaStitnikomZaSkocniZglob) from $article
then
    RecommendedArticleDTO recommendedArticle = new RecommendedArticleDTO();
    recommendedArticle.setName($article.getName());
    recommendedArticle.setPrice($article.getPrice());
    recommendedArticle.setId($article.getId());
    recommendedArticle.setBrandName($article.getBrandName());
    recommendedArticle.setArticleType("Shin protector");
    recommendedArticle.setPathToImage($article.getPathToImage());
    recommendations.add(recommendedArticle);
    insert(recommendedArticle);
end

rule "Nema povrede skocnog zgloba, ponudi kostobran bez stitnika"
salience 100
when
    $filters: Filters(sport == Sport.Fudbal, $selectedInjuries: injuries)
    Injury(name == "Povreda skocnog zgloba", $injuryId: id) from injuries
    eval(!$selectedInjuries.contains($injuryId))
    $article: Article()
    $shinProtector: FootballGear(type == GearTypeFootball.KostobranBezStitnika) from $article
then
    RecommendedArticleDTO recommendedArticle = new RecommendedArticleDTO();
    recommendedArticle.setName($article.getName());
    recommendedArticle.setPrice($article.getPrice());
    recommendedArticle.setId($article.getId());
    recommendedArticle.setBrandName($article.getBrandName());
    recommendedArticle.setArticleType("Shin protector");
    recommendedArticle.setPathToImage($article.getPathToImage());
    recommendations.add(recommendedArticle);
    insert(recommendedArticle);
end

rule "Preporuci kostobrane ako je amater ili pro"
salience 100
when
    $filters: Filters(sport == Sport.Fudbal, (level == SportLevel.Pro || level == SportLevel.Amater), injuries.size() == 0 )

    $article: Article()
    $shinProtector: FootballGear(type == GearTypeFootball.KostobranBezStitnika || type == GearTypeFootball.KostobranSaStitnikomZaSkocniZglob ) from $article
then
    RecommendedArticleDTO recommendedArticle = new RecommendedArticleDTO();
    recommendedArticle.setName($article.getName());
    recommendedArticle.setPrice($article.getPrice());
    recommendedArticle.setId($article.getId());
    recommendedArticle.setBrandName($article.getBrandName());
    recommendedArticle.setArticleType("Shin protector");
    recommendedArticle.setPathToImage($article.getPathToImage());
    recommendations.add(recommendedArticle);
    insert(recommendedArticle);
end

rule "Preporuci stucne ukoliko je preporucen kostobran"
salience 10
when
    $filters: Filters(sport == Sport.Fudbal, (level == SportLevel.Pro || level == SportLevel.Amater))
    $article: Article()
    $e1: RecommendedArticleDTO()
    $shinProtector: FootballGear((type == GearTypeFootball.KostobranBezStitnika || type == GearTypeFootball.KostobranSaStitnikomZaSkocniZglob), id == $e1.getId())
    $stucne: FootballGear(type == GearTypeFootball.Stucne) from $article
then
    RecommendedArticleDTO recommendedArticle = new RecommendedArticleDTO();
    recommendedArticle.setName($article.getName());
    recommendedArticle.setPrice($article.getPrice());
    recommendedArticle.setId($article.getId());
    recommendedArticle.setBrandName($article.getBrandName());
    recommendedArticle.setArticleType("Leg warmers");
    recommendedArticle.setPathToImage($article.getPathToImage());
    recommendations.add(recommendedArticle);
    insert(recommendedArticle);
end

rule "Preporuci podvezice ukoliko su preporucene stucne i pro je"
salience 9
when
    $filters: Filters(sport == Sport.Fudbal, level == SportLevel.Pro)
    $article: Article()
    $e1: RecommendedArticleDTO(articleType == "Leg warmers")
    $podvezice: FootballGear(type == GearTypeFootball.Podvezice) from $article
then
    RecommendedArticleDTO recommendedArticle = new RecommendedArticleDTO();
    recommendedArticle.setName($article.getName());
    recommendedArticle.setPrice($article.getPrice());
    recommendedArticle.setId($article.getId());
    recommendedArticle.setBrandName($article.getBrandName());
    recommendedArticle.setArticleType("sock garters");
    recommendedArticle.setPathToImage($article.getPathToImage());
    recommendations.add(recommendedArticle);
end

rule "Ukoiko je golman nudi kopacku sa 6 krampona"
salience 100
when
    $filters: Filters(sport == Sport.Fudbal, typeOfFotballPlayer == SportFootballPlayer.Golman)
    $article: Article()
    $shoe: FootbalShoeCrampons(numberOfCrampons == 6) from $article
then
    RecommendedArticleDTO recommendedArticle = new RecommendedArticleDTO();
    recommendedArticle.setName($article.getName());
    recommendedArticle.setPrice($article.getPrice());
    recommendedArticle.setId($article.getId());
    recommendedArticle.setBrandName($article.getBrandName());
    recommendedArticle.setArticleType("Shoes");
    recommendedArticle.setPathToImage($article.getPathToImage());
    recommendations.add(recommendedArticle);
    insert(recommendedArticle);
end