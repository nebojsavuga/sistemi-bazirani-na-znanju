package basic;

import com.ftn.sbnz.model.Filters;
import com.ftn.sbnz.model.RecommendedArticleDTO;
import com.ftn.sbnz.model.articles.Article;
import com.ftn.sbnz.model.sport.Sport;
import com.ftn.sbnz.model.sport.SportLevel;
import com.ftn.sbnz.model.sport.SportTenisField;
import com.ftn.sbnz.model.articles.TenisGear;
import com.ftn.sbnz.model.articles.Racket;
import com.ftn.sbnz.model.articles.TypeOfRacket;
import com.ftn.sbnz.model.articles.TypeOfRacketSpanning;
import com.ftn.sbnz.model.articles.TypeOfGear;
import com.ftn.sbnz.model.articles.TenisShoe;
import com.ftn.sbnz.model.articles.Sole;
import com.ftn.sbnz.model.articles.RacketString;
import com.ftn.sbnz.model.articles.Grip;
import com.ftn.sbnz.model.users.Gender;
import com.ftn.sbnz.model.articles.ArticleGenderType;

import java.util.Set;

global Set<RecommendedArticleDTO> recommendations;


rule "Preporuci loptice ako se bavi tenisom"
salience 100
when
    $filters: Filters(sport == Sport.Tenis)
    $article: Article()
    $loptice: TenisGear(gearType == TypeOfGear.Loptice) from $article
then
    RecommendedArticleDTO recommendedArticle = new RecommendedArticleDTO();
    recommendedArticle.setName($article.getName());
    recommendedArticle.setPrice($article.getPrice());
    recommendedArticle.setId($article.getId());
    recommendedArticle.setBrandName($article.getBrandName());
    recommendedArticle.setArticleType("Tenis Balls");
    recommendedArticle.setPathToImage($article.getPathToImage());
    recommendations.add(recommendedArticle);
    insert(recommendedArticle);
end

rule "Preporuci rekete sa tvrdim spanovanjem koji su pro ako se bavi tenisom i profesionalac je"
salience 100
when
    $filters: Filters(sport == Sport.Tenis, level == SportLevel.Pro)
    $article: Article()
    $ewkwr: Racket(spanningType == TypeOfRacketSpanning.Tvrdo, type== TypeOfRacket.Profesionalni) from $article
then
    RecommendedArticleDTO recommendedArticle = new RecommendedArticleDTO();
    recommendedArticle.setName($article.getName());
    recommendedArticle.setPrice($article.getPrice());
    recommendedArticle.setId($article.getId());
    recommendedArticle.setBrandName($article.getBrandName());
    recommendedArticle.setArticleType("Racket");
    recommendedArticle.setPathToImage($article.getPathToImage());
    recommendations.add(recommendedArticle);
    insert(recommendedArticle);
end

rule "Preporuci rekete sa mekim spanovanjem koji su klasik ako se bavi tenisom i amater ili rekreativac je"
salience 100
when
    $filters: Filters(sport == Sport.Tenis, level != SportLevel.Pro, height == null || height == 0)
    $article: Article()
    $reket: Racket(spanningType == TypeOfRacketSpanning.Meko, type== TypeOfRacket.Klasik) from $article
then
    RecommendedArticleDTO recommendedArticle = new RecommendedArticleDTO();
    recommendedArticle.setName($article.getName());
    recommendedArticle.setPrice($article.getPrice());
    recommendedArticle.setId($article.getId());
    recommendedArticle.setBrandName($article.getBrandName());
    recommendedArticle.setArticleType("Racket");
    recommendedArticle.setPathToImage($article.getPathToImage());
    recommendations.add(recommendedArticle);
    insert(recommendedArticle);
end

rule "Preporuci teniske patike sa ravnim djonom ako zeli da igra na tvrdoj podlozi"
salience 100
when
    $filters: Filters(sport == Sport.Tenis, typeOfField == SportTenisField.Beton)
    $article: Article()
    $patike: TenisShoe(sole == Sole.Ravan) from $article
then
    RecommendedArticleDTO recommendedArticle = new RecommendedArticleDTO();
    recommendedArticle.setName($article.getName());
    recommendedArticle.setPrice($article.getPrice());
    recommendedArticle.setId($article.getId());
    recommendedArticle.setBrandName($article.getBrandName());
    recommendedArticle.setArticleType("Tenis Shoe");
    recommendedArticle.setPathToImage($article.getPathToImage());
    recommendations.add(recommendedArticle);
    insert(recommendedArticle);
end

rule "Preporuci teniske patike sa riblja kost djonom ako zeli da igra na sljaci"
salience 100
when
    $filters: Filters(sport == Sport.Tenis, typeOfField == SportTenisField.Sljaka)
    $article: Article()
    $patike: TenisShoe(sole == Sole.RibljaKost) from $article
then
    RecommendedArticleDTO recommendedArticle = new RecommendedArticleDTO();
    recommendedArticle.setName($article.getName());
    recommendedArticle.setPrice($article.getPrice());
    recommendedArticle.setId($article.getId());
    recommendedArticle.setBrandName($article.getBrandName());
    recommendedArticle.setArticleType("Tenis Shoe");
    recommendedArticle.setPathToImage($article.getPathToImage());
    recommendations.add(recommendedArticle);
    insert(recommendedArticle);
end

rule "Preporuci teniske patike sa kramponima ako zeli da igra na travnatoj podlozi"
salience 100
when
    $filters: Filters(sport == Sport.Tenis, typeOfField == SportTenisField.Trava)
    $article: Article()
    $patike: TenisShoe(sole == Sole.Kramponi) from $article
then
    RecommendedArticleDTO recommendedArticle = new RecommendedArticleDTO();
    recommendedArticle.setName($article.getName());
    recommendedArticle.setPrice($article.getPrice());
    recommendedArticle.setId($article.getId());
    recommendedArticle.setBrandName($article.getBrandName());
    recommendedArticle.setArticleType("Tenis Shoe");
    recommendedArticle.setPathToImage($article.getPathToImage());
    recommendations.add(recommendedArticle);
    insert(recommendedArticle);
end


rule "Preporuci zicu ukoliko je preporucen pro reket"
salience 10
when
    $article: Article()
    $e1: RecommendedArticleDTO()
    $racket: Racket(id == $e1.getId(), type== TypeOfRacket.Profesionalni)
    $zica: RacketString() from $article
then
    RecommendedArticleDTO recommendedArticle = new RecommendedArticleDTO();
    recommendedArticle.setName($article.getName());
    recommendedArticle.setPrice($article.getPrice());
    recommendedArticle.setId($article.getId());
    recommendedArticle.setBrandName($article.getBrandName());
    recommendedArticle.setArticleType("Racket");
    recommendedArticle.setPathToImage($article.getPathToImage());
    recommendations.add(recommendedArticle);
    insert(recommendedArticle);
end

rule "Preporuci grip ukoliko je preporucen pro reket"
salience 10
when
    $article: Article()
    $e1: RecommendedArticleDTO()
    $racket: Racket(id == $e1.getId(), type== TypeOfRacket.Profesionalni)
    $grip: Grip() from $article
then
    RecommendedArticleDTO recommendedArticle = new RecommendedArticleDTO();
    recommendedArticle.setName($article.getName());
    recommendedArticle.setPrice($article.getPrice());
    recommendedArticle.setId($article.getId());
    recommendedArticle.setBrandName($article.getBrandName());
    recommendedArticle.setArticleType("Grip");
    recommendedArticle.setPathToImage($article.getPathToImage());
    recommendations.add(recommendedArticle);
    insert(recommendedArticle);
end

rule "Preporuci vibrastop ukoliko je preporucena zica"
salience 9
when
    $article: Article()
    $e1: RecommendedArticleDTO()
    $zica: RacketString(id == $e1.getId())
    $vibrastop: TenisGear(gearType == TypeOfGear.Vibrastop) from $article
then
    RecommendedArticleDTO recommendedArticle = new RecommendedArticleDTO();
    recommendedArticle.setName($article.getName());
    recommendedArticle.setPrice($article.getPrice());
    recommendedArticle.setId($article.getId());
    recommendedArticle.setBrandName($article.getBrandName());
    recommendedArticle.setArticleType("Vibrastop");
    recommendedArticle.setPathToImage($article.getPathToImage());
    recommendations.add(recommendedArticle);
    insert(recommendedArticle);
end

rule "Preporuci Wilson kackete ukoliko je preporuceno preko 4 wilson artikla"
no-loop
salience 8
when
    $filters: Filters(sport == Sport.Tenis)
    $article: Article()
    $kacket: TenisGear(gearType == TypeOfGear.Kacket) from $article
    Number(intValue >= 4) from accumulate(
        $rc : RecommendedArticleDTO(brandName == "Wilson"),
        count($rc)
    )
then
    RecommendedArticleDTO recommendedArticle = new RecommendedArticleDTO();
    recommendedArticle.setName($article.getName());
    recommendedArticle.setPrice($article.getPrice());
    recommendedArticle.setId($article.getId());
    recommendedArticle.setBrandName($article.getBrandName());
    recommendedArticle.setArticleType("Kacket");
    recommendedArticle.setPathToImage($article.getPathToImage());
    recommendations.add(recommendedArticle);
    insert(recommendedArticle);
end

rule "Ukoliko je korisnik musko izbaci zenske artikle iz preporuke"
salience -200
when
    Filters(getGender() == Gender.Musko)
    $recommendedArticle: RecommendedArticleDTO($id: id) from recommendations
    $article: Article(id==$id, gender == ArticleGenderType.Female)
then
    recommendations.remove($recommendedArticle);
end

rule "Ukoliko je korisnik zensko izbaci muske artikle iz preporuke"
salience -200
when
    Filters(getGender() == Gender.Zensko)
    $recommendedArticle: RecommendedArticleDTO($id: id) from recommendations
    $article: Article(id==$id, gender == ArticleGenderType.Male)
then
    recommendations.remove($recommendedArticle);
end