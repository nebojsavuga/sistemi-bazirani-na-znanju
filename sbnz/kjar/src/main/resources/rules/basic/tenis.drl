package basic;

import com.ftn.sbnz.model.Filters;
import com.ftn.sbnz.model.RecommendedArticleDTO;
import com.ftn.sbnz.model.articles.Article;
import com.ftn.sbnz.model.articles.Weightlifting.ElasticBand;
import com.ftn.sbnz.model.articles.Weightlifting.WeightliftingArticle;
import com.ftn.sbnz.model.articles.Football.GrassFootbalShoe;
import com.ftn.sbnz.model.sport.Sport;
import com.ftn.sbnz.model.sport.SportLevel;
import com.ftn.sbnz.model.sport.SportTenisField;
import com.ftn.sbnz.model.articles.Tenis.TenisGear;
import com.ftn.sbnz.model.articles.Tenis.Racket;
import com.ftn.sbnz.model.articles.Tenis.TypeOfRacketSpanning;
import com.ftn.sbnz.model.articles.Tenis.TypeOfGear;
import com.ftn.sbnz.model.articles.Tenis.TenisShoe;
import com.ftn.sbnz.model.articles.Tenis.Sole;


import java.util.Set;

global Set<RecommendedArticleDTO> recommendations;

// public Gender gender;
//     public float height;
//     public int age;
//     public Set<Long> injuries = new HashSet<>();
//     public SportLevel level;
//     public Sport sport;
//     public SportFootballPlayer typeOfFotballPlayer;
//     public SportFootballType typeOfFootball;
//     public SportOrientiringType typeOfRace;
//     public SportTenisField typeOfField;
//     public SportWeightliftingType typeOfWeightlifting;
rule "Preporuci znojnicu ako se bavi tenisom"
when
    $filters: Filters(sport == Sport.Tenis)
    $article: Article()
    $znojnica: TenisGear(gearType == TypeOfGear.Znojnica) from $article
then
    RecommendedArticleDTO recommendedArticle = new RecommendedArticleDTO();
    recommendedArticle.setName($article.getName());
    recommendedArticle.setPrice($article.getPrice());
    recommendedArticle.setId($article.getId());
    recommendedArticle.setBrandName($article.getBrandName());
    recommendations.add(recommendedArticle);
end

rule "Preporuci loptice ako se bavi tenisom"
when
    $filters: Filters(sport == Sport.Tenis)
    $article: Article()
    $loptice: TenisGear(gearType == TypeOfGear.Loptice) from $article
then
    RecommendedArticleDTO recommendedArticle = new RecommendedArticleDTO();
    recommendedArticle.setName($article.getName());
    recommendedArticle.setPrice($article.getPrice());
    recommendedArticle.setId($article.getId());
    recommendedArticle.setBrandName($article.getBrandName());
    recommendations.add(recommendedArticle);
end

rule "Preporuci rekete sa tvrdim spanovanjem ako se bavi tenisom i profesionalac je"
when
    $filters: Filters(sport == Sport.Tenis, level == SportLevel.Pro)
    $article: Article()
    $ewkwr: Racket(spanningType == TypeOfRacketSpanning.Tvrdo) from $article
then
    RecommendedArticleDTO recommendedArticle = new RecommendedArticleDTO();
    recommendedArticle.setName($article.getName());
    recommendedArticle.setPrice($article.getPrice());
    recommendedArticle.setId($article.getId());
    recommendedArticle.setBrandName($article.getBrandName());
    recommendations.add(recommendedArticle);
end

rule "Preporuci rekete sa mekim spanovanjem ako se bavi tenisom i amater ili rekreativac je"
when
    $filters: Filters(sport == Sport.Tenis, level != SportLevel.Pro)
    $article: Article()
    $reket: Racket(spanningType == TypeOfRacketSpanning.Meko) from $article
then
    RecommendedArticleDTO recommendedArticle = new RecommendedArticleDTO();
    recommendedArticle.setName($article.getName());
    recommendedArticle.setPrice($article.getPrice());
    recommendedArticle.setId($article.getId());
    recommendedArticle.setBrandName($article.getBrandName());
    recommendations.add(recommendedArticle);
end

rule "Preporuci teniske patike sa ravnim djonom ako zeli da igra na tvrdoj podlozi"
when
    $filters: Filters(sport == Sport.Tenis, typeOfField == SportTenisField.Beton)
    $article: Article()
    $patike: TenisShoe(sole == Sole.Ravan) from $article
then
    RecommendedArticleDTO recommendedArticle = new RecommendedArticleDTO();
    recommendedArticle.setName($article.getName());
    recommendedArticle.setPrice($article.getPrice());
    recommendedArticle.setId($article.getId());
    recommendedArticle.setBrandName($article.getBrandName());
    recommendations.add(recommendedArticle);
end

rule "Preporuci teniske patike sa riblja kost djonom ako zeli da igra na sljaci"
when
    $filters: Filters(sport == Sport.Tenis, typeOfField == SportTenisField.Sljaka)
    $article: Article()
    $patike: TenisShoe(sole == Sole.RibljaKost) from $article
then
    RecommendedArticleDTO recommendedArticle = new RecommendedArticleDTO();
    recommendedArticle.setName($article.getName());
    recommendedArticle.setPrice($article.getPrice());
    recommendedArticle.setId($article.getId());
    recommendedArticle.setBrandName($article.getBrandName());
    recommendations.add(recommendedArticle);
end

rule "Preporuci teniske patike sa kramponima ako zeli da igra na travnatoj podlozi"
when
    $filters: Filters(sport == Sport.Tenis, typeOfField == SportTenisField.Trava)
    $article: Article()
    $patike: TenisShoe(sole == Sole.Kramponi) from $article
then
    RecommendedArticleDTO recommendedArticle = new RecommendedArticleDTO();
    recommendedArticle.setName($article.getName());
    recommendedArticle.setPrice($article.getPrice());
    recommendedArticle.setId($article.getId());
    recommendedArticle.setBrandName($article.getBrandName());
    recommendations.add(recommendedArticle);
end
// rule "GiveBackArticle2"
// when
//     $filters: Filters()
//     $article: Article()
//     $elasticBand: GrassFootbalShoe() from $article
// then
//     RecommendedArticleDTO recommendedArticle = new RecommendedArticleDTO();
//     recommendedArticle.setName($article.getName());
//     recommendedArticle.setPrice($article.getPrice());
//     recommendedArticle.setId($article.getId());
//     recommendedArticle.setBrandName($article.getBrandName());
//     recommendations.add(recommendedArticle);
//     System.out.println($elasticBand.getNumberOfCrampsons());
// end

// rule "GiveBackArticle3"
// when
//     $filters: Filters()
//     $article: Article()
//     $elasticBand: WeightliftingArticle() from $article
// then
//     RecommendedArticleDTO recommendedArticle = new RecommendedArticleDTO();
//     recommendedArticle.setName($article.getName());
//     recommendedArticle.setPrice($article.getPrice());
//     recommendedArticle.setId($article.getId());
//     recommendedArticle.setBrandName($article.getBrandName());
//     recommendations.add(recommendedArticle);
//     System.out.println($elasticBand.getText());
// end